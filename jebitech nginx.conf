server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name aiinterviewer.icallsystem.in;
    client_max_body_size 100M;


    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/aiinterviewer.icallsystem.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aiinterviewer.icallsystem.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
   
    location /smart_hr {
        root /var/www/html;
        try_files $uri /smart_hr/index.html;
    }

    location /static/ {
        alias /var/www/html/smart_hr/static/;
        try_files $uri $uri/ =404;
    }

    location ~* \.(png|jpg|jpeg|gif|ico)$ {
        root /var/www/html/smart_hr;
        access_log off;
        expires max;
        try_files $uri =404;
    }

    location /manifest.json {
        root /var/www/html/smart_hr;
        try_files $uri =404;
    }

    location /asset-manifest.json {
        root /var/www/html/smart_hr;
        try_files $uri =404;
    }

}


server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ai.neovis.co.in;
    client_max_body_size 100M;

    ssl_certificate /etc/letsencrypt/live/ai.neovis.co.in/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/ai.neovis.co.in/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    
    location / {
        proxy_pass http://127.0.0.1:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;


        # Increase timeouts
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
     }



    location /stt/ {
        proxy_pass http://127.0.0.1:8010/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }

    # Docs for the second FastAPI application
    location /stt/docs {
        proxy_pass http://127.0.0.1:8010/docs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }


    location /stt/openapi.json {
        proxy_pass http://127.0.0.1:8010/openapi.json;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }


    location /analyzer/media/ {
        alias /home/ubuntu/defect-maintenance-main/;
        try_files $uri $uri/ =404; 
    }



    location /analyzer/ {
        proxy_pass http://127.0.0.1:8503/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        send_timeout 300s;
    }

}


server {
    listen 80;
    listen [::]:80;
    server_name ai.neovis.co.in;
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 80;
    server_name aiinterviewer.icallsystem.in;
    if ($host = aiinterviewer.icallsystem.in) {
        return 301 https://$host$request_uri;
    } # managed by Certbot
    return 404; # managed by Certbot
}
